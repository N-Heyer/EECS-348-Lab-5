/* 
Author: Nick Heyer
KUID: 3142337
Date: 10/12/24
Lab: lab05
Last modified: 10/12/24
Purpose: Sales Ledger 
*/

#include <stdio.h> 
#include <stdlib.h>
    

int main() {
    // array to store sales for each month
    float sales[12];

    //array of month names
    char *months[12] = {"January", "February", "March", "April", "May", "June",
                        "July", "August", "September", "October", "November", "December"};
    
    //works with file and stores the name
    FILE *file;
    char filename[100];
    
    //store min max average and total sales
    float min_sales, max_sales, avg_sales, sum_sales;
    int min_month = 0, max_month = 0;
    int i;
    
    //asks the user the name of the file to read from
    printf("Enter the input file name: ");
    scanf("%s", filename);
    
    //open file to read the data
    file = fopen(filename, "r");
   
    // if the file cannot be opened creates an error and stops the program
    if (file == NULL) {
        printf("Error: Could not open file %s\n", filename);
        return 1;
    }           
    // reads data from the file and goes into the array
    for (i = 0; i < 12; i++) {
        if (fscanf(file, "%f", &sales[i]) != 1) {
            printf("Error: Invalid data in file.\n");
            fclose(file);
            return 1;
        }
    }

    // closes file
    fclose(file);
    
    //shows the sales report for all the months
    printf("\nMonthly Sales Report for 2024\n\n");
    printf("Month      Sales\n\n");
    for (i = 0; i < 12; i++) {
        printf("%-10s $%.2f\n", months[i], sales[i]);
    }
    
    // init hte min, max and total
    min_sales = sales[0];
    max_sales = sales[0];
    sum_sales = 0;
    

    // loops thru to find min max and total sales
    for (i = 0; i < 12; i++) {
        if (sales[i] < min_sales) {
            min_sales = sales[i];
            min_month = i;
        }
        if (sales[i] > max_sales) {
            max_sales = sales[i];
            max_month = i;
        }
        sum_sales += sales[i];
    }
    
    //calc the average sales
    avg_sales = sum_sales / 12;

    //prints the min max and avg
    printf("Minimum sales: $%.2f (%s)\n", min_sales, months[min_month]);
    printf("Maximum sales: $%.2f (%s)\n", max_sales, months[max_month]);
    printf("Average sales: $%.2f\n", avg_sales);

    // prints 6 month moving avg report
    printf("\nSix-Month moving average report:\n\n");
   
   // loop to calc and print the avg for each set of 6 months
    for (i = 0; i <= 6; i++) {
        float moving_sum = 0;
        int j;
        for (j = i; j < i + 6; j++) {
            moving_sum += sales[j];
        }
        float moving_avg = moving_sum / 6;
        printf("%s-%s $%.2f\n", months[i], months[i + 5], moving_avg);
    }
    //print sales from highest to lowest
    printf("\nSales report (highest to lowest):\n\n");

    //sorts the sales and months from highest to lowest
    for (i = 0; i < 12 - 1; i++) {
        for (int j = 0; j < 12 - i - 1; j++) {
            if (sales[j] < sales[j + 1]) {
                float temp_sales = sales[j];
                sales[j] = sales[j + 1];
                sales[j + 1] = temp_sales;

                char *temp_month = months[j];
                months[j] = months[j + 1];
                months[j + 1] = temp_month;
            }
        }
    }
    // prints the sorted sales report
    printf("Month      Sales\n\n");
    for (i = 0; i < 12; i++) {
        printf("%-10s $%.2f\n", months[i], sales[i]);
    }

    return 0; // end of program 
}